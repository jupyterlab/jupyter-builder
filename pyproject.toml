# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

[build-system]
requires = ["hatchling>=1.21.1"]
build-backend = "hatchling.build"

[project]
name = "jupyter_builder"
description = "JupyterLab build tools"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
authors = [
    { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
]
keywords = ["ipython", "jupyter"]
classifiers = [
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = ["traitlets"]
dynamic = ["version"]

[project.urls]
Homepage = "https://jupyter.org"
Source = "https://github.com/jupyterlab/jupyterlab_builder"
Issues = "https://github.com/jupyterlab/jupyterlab_builder/issues/new/choose"
Gitter = "https://gitter.im/jupyterlab/jupyterlab"
Pypi = "https://pypi.org/project/jupyter-builder"

[project.optional-dependencies]
test = [
    "coverage",
    "pytest>=7.0",
    "pytest-check-links>=0.7",
    "pytest-cov",
    "copier>=9.2,<10",
    "jinja2-time",
    "jupyterlab",
]
# Check ruff version is aligned with the one in .pre-commit-config.yaml
dev = ["build", "mypy", "pre-commit", "hatch", "ruff==0.6.8"]

[project.scripts]
jupyter-builder = "jupyter_builder.main:main"
jlpm = "jupyter_builder.jlpm:main"

[tool.check-wheel-contents]
ignore = ["W002", "W004"]

[tool.hatch.version]
path = "jupyter_builder/_version.py"
validate-bump = false

[tool.hatch.build.targets.sdist]
exclude = [".github"]

[tool.jupyter-releaser.options]
version_cmd = "hatch version"

# [tool.jupyter-releaser.hooks]
# before-build-npm = [
#     "jlpm",
#     "jlpm build:prod",
# ]
# before-build-python = ["jlpm clean:all"]

[tool.mypy]
python_version = "3.8"
explicit_package_bases = true
strict = true
pretty = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "module:pkg_resources is deprecated:DeprecationWarning",
    "module:This template was designed for Copier:copier.errors.OldTemplateWarning",
    "ignore::ImportWarning",
]

log_cli_level = "INFO"
minversion = "7"
testpaths = ["tests/"]
norecursedirs = ".git _build .ipynb_checkpoints"
addopts = [
    "-ra",
    "--strict-config",
    "--strict-markers",
    "--pdbcls=IPython.terminal.debugger:Pdb",
    "--junitxml=junit.xml",
]
xfail_strict = true

[tool.repo-review]
ignore = ["PC111", "PC180", "PY004", "PY007", "RTD100"]

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.lint]
select = [
    "A",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = ["FBT002", "FBT003"]

[tool.ruff.lint.per-file-ignores]
# S101 Use of `assert` detected
"tests/*" = ["S101", "S603", "S607"]
"jupyter_builder/main.py" = ["RUF012"]
# N806 Variable `tM` in function should be lowercase
# N816 Variable `comparatorTrimReplace` in global scope should not be mixedCase
# PLC1901 test can be simplified as an empty string is falsey
# PLR1714 Consider merging multiple comparisons
# PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
"jupyter_builder/jupyterlab_semver.py" = [
    "C901",
    "EM101",
    "EM102",
    "N806",
    "N816",
    "PLC1901",
    "PLR0912",
    "PLR0915",
    "PLR1714",
    "PLR5501",
]
